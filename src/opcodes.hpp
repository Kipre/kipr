
const int POP_TOP = 1;
const int ROT_TWO = 2;
const int ROT_THREE = 3;
const int DUP_TOP = 4;
const int DUP_TOP_TWO = 5;
const int ROT_FOUR = 6;
const int NOP = 9;
const int UNARY_POSITIVE = 10;
const int UNARY_NEGATIVE = 11;
const int UNARY_NOT = 12;
const int UNARY_INVERT = 15;
const int BINARY_MATRIX_MULTIPLY = 16;
const int INPLACE_MATRIX_MULTIPLY = 17;
const int BINARY_POWER = 19;
const int BINARY_MULTIPLY = 20;
const int BINARY_MODULO = 22;
const int BINARY_ADD = 23;
const int BINARY_SUBTRACT = 24;
const int BINARY_SUBSCR = 25;
const int BINARY_FLOOR_DIVIDE = 26;
const int BINARY_TRUE_DIVIDE = 27;
const int INPLACE_FLOOR_DIVIDE = 28;
const int INPLACE_TRUE_DIVIDE = 29;
const int RERAISE = 48;
const int WITH_EXCEPT_START = 49;
const int GET_AITER = 50;
const int GET_ANEXT = 51;
const int BEFORE_ASYNC_WITH = 52;
const int END_ASYNC_FOR = 54;
const int INPLACE_ADD = 55;
const int INPLACE_SUBTRACT = 56;
const int INPLACE_MULTIPLY = 57;
const int INPLACE_MODULO = 59;
const int STORE_SUBSCR = 60;
const int DELETE_SUBSCR = 61;
const int BINARY_LSHIFT = 62;
const int BINARY_RSHIFT = 63;
const int BINARY_AND = 64;
const int BINARY_XOR = 65;
const int BINARY_OR = 66;
const int INPLACE_POWER = 67;
const int GET_ITER = 68;
const int GET_YIELD_FROM_ITER = 69;
const int PRINT_EXPR = 70;
const int LOAD_BUILD_CLASS = 71;
const int YIELD_FROM = 72;
const int GET_AWAITABLE = 73;
const int LOAD_ASSERTION_ERROR = 74;
const int INPLACE_LSHIFT = 75;
const int INPLACE_RSHIFT = 76;
const int INPLACE_AND = 77;
const int INPLACE_XOR = 78;
const int INPLACE_OR = 79;
const int LIST_TO_TUPLE = 82;
const int RETURN_VALUE = 83;
const int IMPORT_STAR = 84;
const int SETUP_ANNOTATIONS = 85;
const int YIELD_VALUE = 86;
const int POP_BLOCK = 87;
const int POP_EXCEPT = 89;
const int STORE_NAME = 90;
const int DELETE_NAME = 91;
const int UNPACK_SEQUENCE = 92;
const int FOR_ITER = 93;
const int UNPACK_EX = 94;
const int STORE_ATTR = 95;
const int DELETE_ATTR = 96;
const int STORE_GLOBAL = 97;
const int DELETE_GLOBAL = 98;
const int LOAD_CONST = 100;
const int LOAD_NAME = 101;
const int BUILD_TUPLE = 102;
const int BUILD_LIST = 103;
const int BUILD_SET = 104;
const int BUILD_MAP = 105;
const int LOAD_ATTR = 106;
const int COMPARE_OP = 107;
const int IMPORT_NAME = 108;
const int IMPORT_FROM = 109;
const int JUMP_FORWARD = 110;
const int JUMP_IF_FALSE_OR_POP = 111;
const int JUMP_IF_TRUE_OR_POP = 112;
const int JUMP_ABSOLUTE = 113;
const int POP_JUMP_IF_FALSE = 114;
const int POP_JUMP_IF_TRUE = 115;
const int LOAD_GLOBAL = 116;
const int IS_OP = 117;
const int CONTAINS_OP = 118;
const int JUMP_IF_NOT_EXC_MATCH = 121;
const int SETUP_FINALLY = 122;
const int LOAD_FAST = 124;
const int STORE_FAST = 125;
const int DELETE_FAST = 126;
const int RAISE_VARARGS = 130;
const int CALL_FUNCTION = 131;
const int MAKE_FUNCTION = 132;
const int BUILD_SLICE = 133;
const int LOAD_CLOSURE = 135;
const int LOAD_DEREF = 136;
const int STORE_DEREF = 137;
const int DELETE_DEREF = 138;
const int CALL_FUNCTION_KW = 141;
const int CALL_FUNCTION_EX = 142;
const int SETUP_WITH = 143;
const int LIST_APPEND = 145;
const int SET_ADD = 146;
const int MAP_ADD = 147;
const int LOAD_CLASSDEREF = 148;
const int EXTENDED_ARG = 144;
const int SETUP_ASYNC_WITH = 154;
const int FORMAT_VALUE = 155;
const int BUILD_CONST_KEY_MAP = 156;
const int BUILD_STRING = 157;
const int LOAD_METHOD = 160;
const int CALL_METHOD = 161;
const int LIST_EXTEND = 162;
const int SET_UPDATE = 163;
const int DICT_MERGE = 164;
const int DICT_UPDATE = 165;
