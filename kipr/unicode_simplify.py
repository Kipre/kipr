import unicodedata

math_alphanum = "𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳\
𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍𝑎𝑏𝑐𝑑𝑒𝑓𝑔𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧\
𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛\
𝒜𝒞𝒟𝒢𝒥𝒦𝒩𝒪𝒫𝒬𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵𝒶𝒷𝒸𝒹𝒻𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏\
𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃\
𝔄𝔅𝔇𝔈𝔉𝔊𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔𝔖𝔗𝔘𝔙𝔚𝔛𝔜𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷\
𝔸𝔹𝔻𝔼𝔽𝔾𝕀𝕁𝕂𝕃𝕄𝕆𝕊𝕋𝕌𝕍𝕎𝕏𝕐𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫\
𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟\
𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓\
𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇\
𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻\
𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯\
𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝚤𝚥\
𝚨𝚩𝚪𝚫𝚬𝚭𝚮𝚯𝚰𝚱𝚲𝚳𝚴𝚵𝚶𝚷𝚸𝚹𝚺𝚻𝚼𝚽𝚾𝚿𝛀𝛁𝛂𝛃𝛄𝛅𝛆𝛇𝛈𝛉𝛊𝛋𝛌𝛍𝛎𝛏𝛐𝛑𝛒𝛓𝛔𝛕𝛖𝛗𝛘𝛙𝛚𝛛𝛜𝛝𝛞𝛟𝛠𝛡\
𝛢𝛣𝛤𝛥𝛦𝛧𝛨𝛩𝛪𝛫𝛬𝛭𝛮𝛯𝛰𝛱𝛲𝛳𝛴𝛵𝛶𝛷𝛸𝛹𝛺𝛻𝛼𝛽𝛾𝛿𝜀𝜁𝜂𝜃𝜄𝜅𝜆𝜇𝜈𝜉𝜊𝜋𝜌𝜍𝜎𝜏𝜐𝜑𝜒𝜓𝜔𝜕𝜖𝜗𝜘𝜙𝜚𝜛\
𝜜𝜝𝜞𝜟𝜠𝜡𝜢𝜣𝜤𝜥𝜦𝜧𝜨𝜩𝜪𝜫𝜬𝜭𝜮𝜯𝜰𝜱𝜲𝜳𝜴𝜵𝜶𝜷𝜸𝜹𝜺𝜻𝜼𝜽𝜾𝜿𝝀𝝁𝝂𝝃𝝄𝝅𝝆𝝇𝝈𝝉𝝊𝝋𝝌𝝍𝝎𝝏𝝐𝝑𝝒𝝓𝝔𝝕\
𝝖𝝗𝝘𝝙𝝚𝝛𝝜𝝝𝝞𝝟𝝠𝝡𝝢𝝣𝝤𝝥𝝦𝝧𝝨𝝩𝝪𝝫𝝬𝝭𝝮𝝯𝝰𝝱𝝲𝝳𝝴𝝵𝝶𝝷𝝸𝝹𝝺𝝻𝝼𝝽𝝾𝝿𝞀𝞁𝞂𝞃𝞄𝞅𝞆𝞇𝞈𝞉𝞊𝞋𝞌𝞍𝞎𝞏\
𝞐𝞑𝞒𝞓𝞔𝞕𝞖𝞗𝞘𝞙𝞚𝞛𝞜𝞝𝞞𝞟𝞠𝞡𝞢𝞣𝞤𝞥𝞦𝞧𝞨𝞩𝞪𝞫𝞬𝞭𝞮𝞯𝞰𝞱𝞲𝞳𝞴𝞵𝞶𝞷𝞸𝞹𝞺𝞻𝞼𝞽𝞾𝞿𝟀𝟁𝟂𝟃𝟄𝟅𝟆𝟇𝟈𝟉\
𝟊𝟋𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿"

word_to_letter = {
    'differential': 'δ','alpha': 'α','beta': 'β','chi': 'χ','delta': 'δ',
    'digamma': 'ϝ','eight': '8','epsilon': 'ε','eta': 'η','five': '5',
    'four': '4','gamma': 'γ','iota': 'ι','kappa': 'κ','lamda': 'λ',
    'mu': 'μ','nabla': ' ','nine': '9','nu': 'ν','omega': 'ω','omicron': 'ο',
    'one': '1','phi': 'φ','pi': 'π','psi': 'ψ','rho': 'ρ','seven': '7',
    'sigma': 'σ','six': '6','tau': 'τ','theta': 'θ','three': '3','two': '2',
    'upsilon': 'υ','xi': 'ξ','zero': '0','zeta': 'ζ'
}

math_to_letter = {}
for c in math_alphanum:
    last_word = unicodedata.name(c).split(' ')[-1].lower()
    if len(last_word) == 1:
        math_to_letter[c] = last_word
    elif last_word in word_to_letter:
        math_to_letter[c] = word_to_letter[last_word]
    else:
        found = False
        name = unicodedata.name(c).lower()
        for word in word_to_letter:
            if word in name:
                math_to_letter[c] = word_to_letter[word]
                found = True
                break
        if not found:
            raise ValueError(f"Couldn't find the right mapping for '{c}', {name}")

normalize = {
    'ℂ':'c','℃':'c','℉':'f','ℊ':'g','ℋ':'h','ℌ':'h','ℍ':'h','ℎ':'h','ℏ':'h',
    'ℐ':'i','ℑ':'i','ℒ':'l','ℓ':'l','ℕ':'n','№':'n','ℙ':'p','ℚ':'q','ℛ':'r',
    'ℜ':'r','ℝ':'r','℞':'r','℟':'r','℣':'v','ℤ':'z','Ω':'ω','K':'k','Å':'a',
    'ℬ':'b','ℭ':'c','℮':'e','ℯ':'e','ℰ':'e','ℱ':'f','ℳ':'m','ℴ':'o','ℵ':'n',
    'ℹ':'i','ℼ':'π','ℽ': 'γ','ⅅ':'d','ⅆ':'d','ⅇ':'e','ⅈ':'i','ⅉ':'j',
    # super/sub-scripts
    'ⁱ':'i','ⁿ':'n','ₐ':'a','ₑ':'e','ₒ':'o','ₓ':'x','ₔ':'e','ₕ':'h','ₖ':'k',
    'ₗ':'l','ₘ':'m','ₙ':'n','ₚ':'p','ₛ':'s','ₜ': 't',
    # phonetic extensions
    'ᴀ':'a','ᴃ':'b','ᴄ':'c','ᴅ':'d','ᴆ':'d','ᴇ':'e','ᴉ':'i','ᴊ':'j','ᴋ':'k',
    'ᴌ':'l','ᴍ':'m','ᴎ':'n','ᴏ':'o','ᴐ':'o','ᴑ':'o','ᴓ':'o','ᴘ':'p','ᴙ':'r',
    'ᴚ':'r','ᴛ':'t','ᴜ':'u','ᴠ':'v','ᴡ':'w','ᴢ':'z','ᴦ':'γ','ᴧ':'λ','ᴨ':'π',
    'ᴩ':'ρ','ᴪ':'ψ','ᴫ':'л','ᴬ':'a','ᴮ':'b','ᴯ':'b','ᴰ':'d','ᴱ':'e','ᴲ':'e',
    'ᴳ':'g','ᴴ':'h','ᴵ':'i','ᴶ':'j','ᴷ':'k','ᴸ':'l','ᴹ':'m','ᴺ':'n','ᴻ':'n',
    'ᴼ':'o','ᴾ':'p','ᴿ':'r','ᵀ':'t','ᵁ':'u','ᵂ':'w','ᵃ':'a','ᵅ':'α','ᵇ':'b',
    'ᵈ':'d','ᵉ':'e','ᵍ':'g','ᵎ':'i','ᵏ':'k','ᵐ':'m','ᵒ':'o','ᵖ':'p','ᵗ':'t',
    'ᵘ':'u','ᵚ':'m','ᵛ':'v','ᵝ':'β','ᵞ':'γ','ᵟ':'δ','ᵠ':'φ','ᵡ':'χ','ᵢ':'i',
    'ᵣ':'r','ᵤ':'u','ᵥ':'v','ᵦ':'β','ᵧ':'γ','ᵨ':'ρ','ᵩ':'φ','ᵪ':'χ',
    # ipa extensions
    'ɐ':'a','ɑ':'α','ɒ':'α','ɘ':'e','ɛ':'e','ɜ':'e','ɡ':'g','ɢ':'g',
    'ɣ':'γ','ɥ':'h','ɦ':'h','ɨ':'i','ɩ':'ι','ɪ':'i','ɫ':'l','ɬ':'l','ɭ':'l',
    'ɯ':'m','ɱ':'m','ɲ':'n','ɳ':'n','ɴ':'n','ɷ':'ω','ɸ':'φ','ɹ':'r','ɺ':'r',
    'ɻ':'r','ɼ':'r','ɽ':'r','ɾ':'r','ʀ':'r','ʁ':'r','ʂ':'s','ʇ':'t','ʈ':'t',
    'ʋ':'v','ʌ':'v','ʍ':'w','ʎ':'y','ʏ':'y','ʐ':'z','ʑ':'z','ʗ':'c','ʙ':'b',
    'ʛ':'g','ʜ':'h','ʝ':'j','ʞ':'k','ʟ':'l','ʠ':'q','ʮ':'h','ʯ':'h',
    # half/full-widths
    'ａ':'a','ｂ':'b','ｃ':'c','ｄ':'d','ｅ':'e','ｆ':'f','ｇ':'g','ｈ':'h',
    'ｉ':'i','ｊ':'j','ｋ':'k','ｌ':'l','ｍ':'m','ｎ':'n','ｏ':'o','ｐ':'p',
    'ｑ':'q','ｒ':'r','ｓ':'s','ｔ':'t','ｕ':'u','ｖ':'v','ｗ':'w','ｘ':'x',
    'ｙ':'y','ｚ':'z',
    # modifiers
    'ʰ':'h','ʱ':'h','ʲ':'j','ʳ':'r','ʴ':'r','ʵ':'r','ʶ':'r','ʷ':'w','ʸ':'y',
    'ˠ':'γ','ˡ':'l','ˢ':'s','ˣ':'x','ᶜ':'c',
    # regional
    '🇦':'a','🇧':'b','🇨':'c','🇩':'d','🇪':'e','🇫':'f','🇬':'g','🇭':'h','🇮':'i',
    '🇯':'j','🇰':'k','🇱':'l','🇲':'m','🇳':'n','🇴':'o','🇵':'p','🇶':'q','🇷':'r',
    '🇸':'s','🇹':'t','🇺':'u','🇻':'v','🇼':'w','🇽':'x','🇾':'y','🇿':'z',
    # punctuation
    '«': '"', '\xad': '-', '´': "'", '»': '"', '÷': '/', 'ǀ': '|', 'ǃ': '!', 
    'ʹ': "'", 'ʺ': '"', 'ʼ': "'", '˄': '^', 'ˆ': '^', 'ˈ': "'", 'ˋ': '`', 
    'ˍ': '_', '˜': '~', '̀': '`', '́': "'", '̂': '^', '̃': '~', '̋': '"', '̎': '"', 
    '̱': '_', '̲': '_', '̸': '/', '։': ':', '׀': '|', '׃': ':', '٪': '%', '٭': '*', 
    '‐': '-', '‑': '-', '‒': '-', '–': '-', '—': '-', '―': '--', '‖': '||', 
    '‗': '_', '‘': "'", '’': "'", '‛': "'", '“': '"', '”': '"', '„': '"', 
    '‟': '"', '′': "'", '″': '"', '‴': "'''", '‵': '`', '‶': '"', '‷': "'''", 
    '‸': '^', '‹': '<', '›': '>', '‽': '?', '⁄': '/', '⁎': '*', '⁒': '%', 
    '⁓': '~', '⃥': '\\', '−': '-', '∕': '/', '∖': '\\', '∗': '*', '∣': '|', 
    '∶': ':', '∼': '~', '≤': '<=', '≥': '>=', '≦': '<=', '≧': '>=', '⌃': '^', 
    '〈': '<', '〉': '>', '♯': '#', '✱': '*', '❘': '|', '❢': '!', '⟦': '[', '⟨': '<', 
    '⟩': '>', '⦃': '{', '⦄': '}', '〃': '"', '〈': '<', '〉': '>', '〛': ']', 
    '〜': '~', '〝': '"', '〞': '"','！':'!','＂':'"','＃':'#','＄':'$',
    '％':'%','＆':'&','＇':"'",'（':'(','）':')','＊':'*','＋':'+','，':',',
    '－':'-','．':'.','／':'/','：':':','；':';','＜':'<','＝':'=','＞':'>',
    '？':'?','［':'[','＼':'\\','］':']','＾':'^','＿':'_',
    # math characters
    **math_to_letter
}
